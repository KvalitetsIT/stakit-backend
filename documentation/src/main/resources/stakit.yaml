openapi: 3.0.0
info:
  title: Stakit
  description: API description for StaKit.
  version: "1.0.0"
  contact:
    email: development@kvalitetitsit.dk
tags:
  - name: StaKit
    description: StaKit related API's

servers:
  - url: '{protocol}://{environment}:{port}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      environment:
        enum:
          - localhost # Docker-compose setup
        default: localhost # Development
      port:
        enum:
          - 8080
        default: 8080
paths:
  /v1/status:
    post:
      tags:
        - StaKit
      summary: Update status
      description: Used to update status of a service from one of the adapters.
      requestBody:
        description: Your name
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/status-update'
      responses:
        '201':
          description: The

components:
  responses:
    '400':
      description: "Bad Request. This could be because: * One of the required parameters/properties are missing or is empty <br> * Length of input is exceeding maximum length <br> (See a possible detailed error message in the in the response.)"
    '401':
      description: "Unauthorized. This could be because: <br> * The calling system has not been properly authenticated."
    '403':
      description: "Forbidden. This could be because: <br> * The requested information does not belong the organisation of the user <br> * The calling user does not have the required roles"
  schemas:
    helloResponse:
      type: object
      required:
        - name
        - now
      properties:
        name:
          description: Your name
          type: string
          example: "John Doe"
        now:
          description: Time request was received
          type: string
          format: date-time
        i_can_be_null:
          type: string
          nullable: true

    status-update:
      type: object
      required:
        - service
        - status
        - status-time
      properties:
        service:
          description: The service to update. If the service is not created it will be created. It is recommended to use a hashed value of for instance the service name being monitored.
          type: string
          example: "5fc5effbb9b22e812dfc731edea89417c8c22799606fddeadc4cd973"
        status:
          description: Status of service
          type: string
          enum: [OK, NOT_OK]
        status-time:
          description: Date/time for the status
          type: string
          format: date-time
        message:
          description: Optional message for the status update.
          type: string
          example: "Service can not connect to database."
